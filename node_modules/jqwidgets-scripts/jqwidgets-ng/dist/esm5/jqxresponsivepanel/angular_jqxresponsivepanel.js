import * as jqxcore from '../../jqwidgets-scripts/jqwidgets/jqxcore';
import * as jqxresponsivepanel from '../../jqwidgets-scripts/jqwidgets/jqxresponsivepanel';
/// <reference path="../../jqwidgets.d.ts" />
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';
var jqxResponsivePanelComponent = /** @class */ (function () {
    function jqxResponsivePanelComponent(containerElement) {
        this.autoCreate = true;
        this.properties = ['animationDirection', 'animationHideDelay', 'animationShowDelay', 'animationType', 'autoClose', 'collapseBreakpoint', 'collapseWidth', 'height', 'initContent', 'theme', 'toggleButton', 'toggleButtonSize', 'width'];
        // jqxResponsivePanelComponent events
        this.onClose = new EventEmitter();
        this.onCollapse = new EventEmitter();
        this.onExpand = new EventEmitter();
        this.onOpen = new EventEmitter();
        this.elementRef = containerElement;
    }
    jqxResponsivePanelComponent.prototype.ngOnInit = function () {
        if (this.autoCreate) {
            this.createComponent();
        }
    };
    ;
    jqxResponsivePanelComponent.prototype.ngOnChanges = function (changes) {
        if (this.host) {
            for (var i = 0; i < this.properties.length; i++) {
                var attrName = 'attr' + this.properties[i].substring(0, 1).toUpperCase() + this.properties[i].substring(1);
                var areEqual = false;
                if (this[attrName] !== undefined) {
                    if (typeof this[attrName] === 'object') {
                        if (this[attrName] instanceof Array) {
                            areEqual = this.arraysEqual(this[attrName], this.host.jqxResponsivePanel(this.properties[i]));
                        }
                        if (areEqual) {
                            return false;
                        }
                        this.host.jqxResponsivePanel(this.properties[i], this[attrName]);
                        continue;
                    }
                    if (this[attrName] !== this.host.jqxResponsivePanel(this.properties[i])) {
                        this.host.jqxResponsivePanel(this.properties[i], this[attrName]);
                    }
                }
            }
        }
    };
    jqxResponsivePanelComponent.prototype.arraysEqual = function (attrValue, hostValue) {
        if ((attrValue && !hostValue) || (!attrValue && hostValue)) {
            return false;
        }
        if (attrValue.length != hostValue.length) {
            return false;
        }
        for (var i = 0; i < attrValue.length; i++) {
            if (attrValue[i] !== hostValue[i]) {
                return false;
            }
        }
        return true;
    };
    jqxResponsivePanelComponent.prototype.manageAttributes = function () {
        var options = {};
        for (var i = 0; i < this.properties.length; i++) {
            var attrName = 'attr' + this.properties[i].substring(0, 1).toUpperCase() + this.properties[i].substring(1);
            if (this[attrName] !== undefined) {
                options[this.properties[i]] = this[attrName];
            }
        }
        return options;
    };
    jqxResponsivePanelComponent.prototype.moveClasses = function (parentEl, childEl) {
        var _a;
        var classes = parentEl.classList;
        if (classes.length > 0) {
            (_a = childEl.classList).add.apply(_a, tslib_1.__spread(classes));
        }
        parentEl.className = '';
    };
    jqxResponsivePanelComponent.prototype.moveStyles = function (parentEl, childEl) {
        var style = parentEl.style.cssText;
        childEl.style.cssText = style;
        parentEl.style.cssText = '';
    };
    jqxResponsivePanelComponent.prototype.createComponent = function (options) {
        if (this.host) {
            return;
        }
        if (options) {
            JQXLite.extend(options, this.manageAttributes());
        }
        else {
            options = this.manageAttributes();
        }
        this.host = JQXLite(this.elementRef.nativeElement.firstChild);
        this.moveClasses(this.elementRef.nativeElement, this.host[0]);
        this.moveStyles(this.elementRef.nativeElement, this.host[0]);
        this.__wireEvents__();
        this.widgetObject = jqwidgets.createInstance(this.host, 'jqxResponsivePanel', options);
    };
    jqxResponsivePanelComponent.prototype.createWidget = function (options) {
        this.createComponent(options);
    };
    jqxResponsivePanelComponent.prototype.__updateRect__ = function () {
        if (this.host)
            this.host.css({ width: this.attrWidth, height: this.attrHeight });
    };
    jqxResponsivePanelComponent.prototype.setOptions = function (options) {
        this.host.jqxResponsivePanel('setOptions', options);
    };
    // jqxResponsivePanelComponent properties
    jqxResponsivePanelComponent.prototype.animationDirection = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('animationDirection', arg);
        }
        else {
            return this.host.jqxResponsivePanel('animationDirection');
        }
    };
    jqxResponsivePanelComponent.prototype.animationHideDelay = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('animationHideDelay', arg);
        }
        else {
            return this.host.jqxResponsivePanel('animationHideDelay');
        }
    };
    jqxResponsivePanelComponent.prototype.animationShowDelay = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('animationShowDelay', arg);
        }
        else {
            return this.host.jqxResponsivePanel('animationShowDelay');
        }
    };
    jqxResponsivePanelComponent.prototype.animationType = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('animationType', arg);
        }
        else {
            return this.host.jqxResponsivePanel('animationType');
        }
    };
    jqxResponsivePanelComponent.prototype.autoClose = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('autoClose', arg);
        }
        else {
            return this.host.jqxResponsivePanel('autoClose');
        }
    };
    jqxResponsivePanelComponent.prototype.collapseBreakpoint = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('collapseBreakpoint', arg);
        }
        else {
            return this.host.jqxResponsivePanel('collapseBreakpoint');
        }
    };
    jqxResponsivePanelComponent.prototype.collapseWidth = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('collapseWidth', arg);
        }
        else {
            return this.host.jqxResponsivePanel('collapseWidth');
        }
    };
    jqxResponsivePanelComponent.prototype.height = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('height', arg);
        }
        else {
            return this.host.jqxResponsivePanel('height');
        }
    };
    jqxResponsivePanelComponent.prototype.initContent = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('initContent', arg);
        }
        else {
            return this.host.jqxResponsivePanel('initContent');
        }
    };
    jqxResponsivePanelComponent.prototype.theme = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('theme', arg);
        }
        else {
            return this.host.jqxResponsivePanel('theme');
        }
    };
    jqxResponsivePanelComponent.prototype.toggleButton = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('toggleButton', arg);
        }
        else {
            return this.host.jqxResponsivePanel('toggleButton');
        }
    };
    jqxResponsivePanelComponent.prototype.toggleButtonSize = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('toggleButtonSize', arg);
        }
        else {
            return this.host.jqxResponsivePanel('toggleButtonSize');
        }
    };
    jqxResponsivePanelComponent.prototype.width = function (arg) {
        if (arg !== undefined) {
            this.host.jqxResponsivePanel('width', arg);
        }
        else {
            return this.host.jqxResponsivePanel('width');
        }
    };
    // jqxResponsivePanelComponent functions
    jqxResponsivePanelComponent.prototype.close = function () {
        this.host.jqxResponsivePanel('close');
    };
    jqxResponsivePanelComponent.prototype.destroy = function () {
        this.host.jqxResponsivePanel('destroy');
    };
    jqxResponsivePanelComponent.prototype.isCollapsed = function () {
        return this.host.jqxResponsivePanel('isCollapsed');
    };
    jqxResponsivePanelComponent.prototype.isOpened = function () {
        return this.host.jqxResponsivePanel('isOpened');
    };
    jqxResponsivePanelComponent.prototype.open = function () {
        this.host.jqxResponsivePanel('open');
    };
    jqxResponsivePanelComponent.prototype.refresh = function () {
        this.host.jqxResponsivePanel('refresh');
    };
    jqxResponsivePanelComponent.prototype.render = function () {
        this.host.jqxResponsivePanel('render');
    };
    jqxResponsivePanelComponent.prototype.__wireEvents__ = function () {
        var _this = this;
        this.host.on('close', function (eventData) { _this.onClose.emit(eventData); });
        this.host.on('collapse', function (eventData) { _this.onCollapse.emit(eventData); });
        this.host.on('expand', function (eventData) { _this.onExpand.emit(eventData); });
        this.host.on('open', function (eventData) { _this.onOpen.emit(eventData); });
    };
    tslib_1.__decorate([
        Input('animationDirection'),
        tslib_1.__metadata("design:type", String)
    ], jqxResponsivePanelComponent.prototype, "attrAnimationDirection", void 0);
    tslib_1.__decorate([
        Input('animationHideDelay'),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "attrAnimationHideDelay", void 0);
    tslib_1.__decorate([
        Input('animationShowDelay'),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "attrAnimationShowDelay", void 0);
    tslib_1.__decorate([
        Input('animationType'),
        tslib_1.__metadata("design:type", String)
    ], jqxResponsivePanelComponent.prototype, "attrAnimationType", void 0);
    tslib_1.__decorate([
        Input('autoClose'),
        tslib_1.__metadata("design:type", Boolean)
    ], jqxResponsivePanelComponent.prototype, "attrAutoClose", void 0);
    tslib_1.__decorate([
        Input('collapseBreakpoint'),
        tslib_1.__metadata("design:type", Number)
    ], jqxResponsivePanelComponent.prototype, "attrCollapseBreakpoint", void 0);
    tslib_1.__decorate([
        Input('collapseWidth'),
        tslib_1.__metadata("design:type", Number)
    ], jqxResponsivePanelComponent.prototype, "attrCollapseWidth", void 0);
    tslib_1.__decorate([
        Input('initContent'),
        tslib_1.__metadata("design:type", Function)
    ], jqxResponsivePanelComponent.prototype, "attrInitContent", void 0);
    tslib_1.__decorate([
        Input('theme'),
        tslib_1.__metadata("design:type", String)
    ], jqxResponsivePanelComponent.prototype, "attrTheme", void 0);
    tslib_1.__decorate([
        Input('toggleButton'),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "attrToggleButton", void 0);
    tslib_1.__decorate([
        Input('toggleButtonSize'),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "attrToggleButtonSize", void 0);
    tslib_1.__decorate([
        Input('width'),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "attrWidth", void 0);
    tslib_1.__decorate([
        Input('height'),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "attrHeight", void 0);
    tslib_1.__decorate([
        Input('auto-create'),
        tslib_1.__metadata("design:type", Boolean)
    ], jqxResponsivePanelComponent.prototype, "autoCreate", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "onClose", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "onCollapse", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "onExpand", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], jqxResponsivePanelComponent.prototype, "onOpen", void 0);
    jqxResponsivePanelComponent = tslib_1.__decorate([
        Component({
            selector: 'jqxResponsivePanel',
            template: '<div><ng-content></ng-content></div>'
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef])
    ], jqxResponsivePanelComponent);
    return jqxResponsivePanelComponent;
}()); //jqxResponsivePanelComponent
export { jqxResponsivePanelComponent };
//# sourceMappingURL=data:application/json;base64,