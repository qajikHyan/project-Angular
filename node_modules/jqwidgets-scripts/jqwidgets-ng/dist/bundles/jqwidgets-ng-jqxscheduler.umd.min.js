require('../../jqwidgets-scripts/jqwidgets/jqxcore');
require('../../jqwidgets-scripts/jqwidgets/jqxdata');
require('../../jqwidgets-scripts/jqwidgets/jqxdata.export');
require('../../jqwidgets-scripts/jqwidgets/jqxdate');
require('../../jqwidgets-scripts/jqwidgets/jqxbuttons');
require('../../jqwidgets-scripts/jqwidgets/jqxmenu');
require('../../jqwidgets-scripts/jqwidgets/jqxtooltip');
require('../../jqwidgets-scripts/jqwidgets/jqxscrollbar');
require('../../jqwidgets-scripts/jqwidgets/jqxradiobutton');
require('../../jqwidgets-scripts/jqwidgets/jqxcheckbox');
require('../../jqwidgets-scripts/jqwidgets/jqxwindow');
require('../../jqwidgets-scripts/jqwidgets/jqxlistbox');
require('../../jqwidgets-scripts/jqwidgets/jqxcolorpicker');
require('../../jqwidgets-scripts/jqwidgets/jqxcombobox');
require('../../jqwidgets-scripts/jqwidgets/jqxdropdownlist');
require('../../jqwidgets-scripts/jqwidgets/jqxnumberinput');
require('../../jqwidgets-scripts/jqwidgets/jqxinput');
require('../../jqwidgets-scripts/jqwidgets/globalization/globalize');
require('../../jqwidgets-scripts/jqwidgets/jqxcalendar');
require('../../jqwidgets-scripts/jqwidgets/jqxdatetimeinput');
require('../../jqwidgets-scripts/jqwidgets/jqxscheduler');
require('../../jqwidgets-scripts/jqwidgets/jqxscheduler.api');
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("jqwidgets-ng/jqxscheduler",["exports","@angular/core"],e):e(((t=t||self)["jqwidgets-ng"]=t["jqwidgets-ng"]||{},t["jqwidgets-ng"].jqxscheduler={}),t.ng.core)}(this,function(t,e){"use strict";function o(t,e,o,n){var i,r=arguments.length,p=r<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,e,o,n);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(p=(r<3?i(p):r>3?i(e,o,p):i(e,o))||p);return r>3&&p&&Object.defineProperty(e,o,p),p}function n(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}function i(t,e){var o="function"==typeof Symbol&&t[Symbol.iterator];if(!o)return t;var n,i,r=o.call(t),p=[];try{for(;(void 0===e||e-- >0)&&!(n=r.next()).done;)p.push(n.value)}catch(s){i={error:s}}finally{try{n&&!n.done&&(o=r["return"])&&o.call(r)}finally{if(i)throw i.error}}return p}var r=function(){function t(t){this.autoCreate=!0,this.properties=["appointmentOpacity","appointmentsMinHeight","appointmentDataFields","appointmentTooltips","columnsHeight","contextMenu","contextMenuOpen","contextMenuClose","contextMenuItemClick","contextMenuCreate","changedAppointments","disabled","date","dayNameFormat","enableHover","editDialog","editDialogDateTimeFormatString","editDialogDateFormatString","editDialogOpen","editDialogCreate","editDialogKeyDown","editDialogClose","exportSettings","height","legendPosition","legendHeight","localization","min","max","ready","renderAppointment","rendering","rendered","rtl","resources","rowsHeight","showToolbar","showLegend","scrollBarSize","source","statuses","touchRowsHeight","theme","touchAppointmentsMinHeight","touchScrollBarSize","timeZone","touchDayNameFormat","toolBarRangeFormat","toolBarRangeFormatAbbr","toolbarHeight","views","view","width"],this.onAppointmentChange=new e.EventEmitter,this.onAppointmentClick=new e.EventEmitter,this.onAppointmentDoubleClick=new e.EventEmitter,this.onAppointmentDelete=new e.EventEmitter,this.onAppointmentAdd=new e.EventEmitter,this.onBindingComplete=new e.EventEmitter,this.onCellClick=new e.EventEmitter,this.onCellDoubleClick=new e.EventEmitter,this.onContextMenuOpen=new e.EventEmitter,this.onContextMenuClose=new e.EventEmitter,this.onContextMenuItemClick=new e.EventEmitter,this.onContextMenuCreate=new e.EventEmitter,this.onDateChange=new e.EventEmitter,this.onEditRecurrenceDialogOpen=new e.EventEmitter,this.onEditRecurrenceDialogClose=new e.EventEmitter,this.onEditDialogCreate=new e.EventEmitter,this.onEditDialogOpen=new e.EventEmitter,this.onEditDialogClose=new e.EventEmitter,this.onViewChange=new e.EventEmitter,this.elementRef=t}return t.prototype.ngOnInit=function(){this.autoCreate&&this.createComponent()},t.prototype.ngOnChanges=function(t){if(this.host)for(var e=0;e<this.properties.length;e++){var o="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1),n=!1;if(this[o]!==undefined){if("object"==typeof this[o]){if(this[o]instanceof Array&&(n=this.arraysEqual(this[o],this.host.jqxScheduler(this.properties[e]))),n)return!1;this.host.jqxScheduler(this.properties[e],this[o]);continue}this[o]!==this.host.jqxScheduler(this.properties[e])&&this.host.jqxScheduler(this.properties[e],this[o])}}},t.prototype.arraysEqual=function(t,e){if(t&&!e||!t&&e)return!1;if(t.length!=e.length)return!1;for(var o=0;o<t.length;o++)if(t[o]!==e[o])return!1;return!0},t.prototype.manageAttributes=function(){for(var t={},e=0;e<this.properties.length;e++){var o="attr"+this.properties[e].substring(0,1).toUpperCase()+this.properties[e].substring(1);this[o]!==undefined&&(t[this.properties[e]]=this[o])}return t},t.prototype.moveClasses=function(t,e){var o,n=t.classList;n.length>0&&(o=e.classList).add.apply(o,function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(i(arguments[e]));return t}(n)),t.className=""},t.prototype.moveStyles=function(t,e){var o=t.style.cssText;e.style.cssText=o,t.style.cssText=""},t.prototype.createComponent=function(t){this.host||(t?JQXLite.extend(t,this.manageAttributes()):t=this.manageAttributes(),this.host=JQXLite(this.elementRef.nativeElement.firstChild),this.moveClasses(this.elementRef.nativeElement,this.host[0]),this.moveStyles(this.elementRef.nativeElement,this.host[0]),this.__wireEvents__(),this.widgetObject=jqwidgets.createInstance(this.host,"jqxScheduler",t))},t.prototype.createWidget=function(t){this.createComponent(t)},t.prototype.__updateRect__=function(){this.host&&this.host.css({width:this.attrWidth,height:this.attrHeight})},t.prototype.setOptions=function(t){this.host.jqxScheduler("setOptions",t)},t.prototype.appointmentOpacity=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentOpacity");this.host.jqxScheduler("appointmentOpacity",t)},t.prototype.appointmentsMinHeight=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentsMinHeight");this.host.jqxScheduler("appointmentsMinHeight",t)},t.prototype.appointmentDataFields=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentDataFields");this.host.jqxScheduler("appointmentDataFields",t)},t.prototype.appointmentTooltips=function(t){if(t===undefined)return this.host.jqxScheduler("appointmentTooltips");this.host.jqxScheduler("appointmentTooltips",t)},t.prototype.columnsHeight=function(t){if(t===undefined)return this.host.jqxScheduler("columnsHeight");this.host.jqxScheduler("columnsHeight",t)},t.prototype.contextMenu=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenu");this.host.jqxScheduler("contextMenu",t)},t.prototype.contextMenuOpen=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuOpen");this.host.jqxScheduler("contextMenuOpen",t)},t.prototype.contextMenuClose=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuClose");this.host.jqxScheduler("contextMenuClose",t)},t.prototype.contextMenuItemClick=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuItemClick");this.host.jqxScheduler("contextMenuItemClick",t)},t.prototype.contextMenuCreate=function(t){if(t===undefined)return this.host.jqxScheduler("contextMenuCreate");this.host.jqxScheduler("contextMenuCreate",t)},t.prototype.changedAppointments=function(t){if(t===undefined)return this.host.jqxScheduler("changedAppointments");this.host.jqxScheduler("changedAppointments",t)},t.prototype.disabled=function(t){if(t===undefined)return this.host.jqxScheduler("disabled");this.host.jqxScheduler("disabled",t)},t.prototype.date=function(t){if(t===undefined)return this.host.jqxScheduler("date");this.host.jqxScheduler("date",t)},t.prototype.dayNameFormat=function(t){if(t===undefined)return this.host.jqxScheduler("dayNameFormat");this.host.jqxScheduler("dayNameFormat",t)},t.prototype.enableHover=function(t){if(t===undefined)return this.host.jqxScheduler("enableHover");this.host.jqxScheduler("enableHover",t)},t.prototype.editDialog=function(t){if(t===undefined)return this.host.jqxScheduler("editDialog");this.host.jqxScheduler("editDialog",t)},t.prototype.editDialogDateTimeFormatString=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogDateTimeFormatString");this.host.jqxScheduler("editDialogDateTimeFormatString",t)},t.prototype.editDialogDateFormatString=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogDateFormatString");this.host.jqxScheduler("editDialogDateFormatString",t)},t.prototype.editDialogOpen=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogOpen");this.host.jqxScheduler("editDialogOpen",t)},t.prototype.editDialogCreate=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogCreate");this.host.jqxScheduler("editDialogCreate",t)},t.prototype.editDialogKeyDown=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogKeyDown");this.host.jqxScheduler("editDialogKeyDown",t)},t.prototype.editDialogClose=function(t){if(t===undefined)return this.host.jqxScheduler("editDialogClose");this.host.jqxScheduler("editDialogClose",t)},t.prototype.exportSettings=function(t){if(t===undefined)return this.host.jqxScheduler("exportSettings");this.host.jqxScheduler("exportSettings",t)},t.prototype.height=function(t){if(t===undefined)return this.host.jqxScheduler("height");this.host.jqxScheduler("height",t)},t.prototype.legendPosition=function(t){if(t===undefined)return this.host.jqxScheduler("legendPosition");this.host.jqxScheduler("legendPosition",t)},t.prototype.legendHeight=function(t){if(t===undefined)return this.host.jqxScheduler("legendHeight");this.host.jqxScheduler("legendHeight",t)},t.prototype.localization=function(t){if(t===undefined)return this.host.jqxScheduler("localization");this.host.jqxScheduler("localization",t)},t.prototype.min=function(t){if(t===undefined)return this.host.jqxScheduler("min");this.host.jqxScheduler("min",t)},t.prototype.max=function(t){if(t===undefined)return this.host.jqxScheduler("max");this.host.jqxScheduler("max",t)},t.prototype.ready=function(t){if(t===undefined)return this.host.jqxScheduler("ready");this.host.jqxScheduler("ready",t)},t.prototype.renderAppointment=function(t){if(t===undefined)return this.host.jqxScheduler("renderAppointment");this.host.jqxScheduler("renderAppointment",t)},t.prototype.rendering=function(t){if(t===undefined)return this.host.jqxScheduler("rendering");this.host.jqxScheduler("rendering",t)},t.prototype.rendered=function(t){if(t===undefined)return this.host.jqxScheduler("rendered");this.host.jqxScheduler("rendered",t)},t.prototype.rtl=function(t){if(t===undefined)return this.host.jqxScheduler("rtl");this.host.jqxScheduler("rtl",t)},t.prototype.resources=function(t){if(t===undefined)return this.host.jqxScheduler("resources");this.host.jqxScheduler("resources",t)},t.prototype.rowsHeight=function(t){if(t===undefined)return this.host.jqxScheduler("rowsHeight");this.host.jqxScheduler("rowsHeight",t)},t.prototype.showToolbar=function(t){if(t===undefined)return this.host.jqxScheduler("showToolbar");this.host.jqxScheduler("showToolbar",t)},t.prototype.showLegend=function(t){if(t===undefined)return this.host.jqxScheduler("showLegend");this.host.jqxScheduler("showLegend",t)},t.prototype.scrollBarSize=function(t){if(t===undefined)return this.host.jqxScheduler("scrollBarSize");this.host.jqxScheduler("scrollBarSize",t)},t.prototype.source=function(t){if(t===undefined)return this.host.jqxScheduler("source");this.host.jqxScheduler("source",t)},t.prototype.statuses=function(t){if(t===undefined)return this.host.jqxScheduler("statuses");this.host.jqxScheduler("statuses",t)},t.prototype.touchRowsHeight=function(t){if(t===undefined)return this.host.jqxScheduler("touchRowsHeight");this.host.jqxScheduler("touchRowsHeight",t)},t.prototype.theme=function(t){if(t===undefined)return this.host.jqxScheduler("theme");this.host.jqxScheduler("theme",t)},t.prototype.touchAppointmentsMinHeight=function(t){if(t===undefined)return this.host.jqxScheduler("touchAppointmentsMinHeight");this.host.jqxScheduler("touchAppointmentsMinHeight",t)},t.prototype.touchScrollBarSize=function(t){if(t===undefined)return this.host.jqxScheduler("touchScrollBarSize");this.host.jqxScheduler("touchScrollBarSize",t)},t.prototype.timeZone=function(t){if(t===undefined)return this.host.jqxScheduler("timeZone");this.host.jqxScheduler("timeZone",t)},t.prototype.touchDayNameFormat=function(t){if(t===undefined)return this.host.jqxScheduler("touchDayNameFormat");this.host.jqxScheduler("touchDayNameFormat",t)},t.prototype.toolBarRangeFormat=function(t){if(t===undefined)return this.host.jqxScheduler("toolBarRangeFormat");this.host.jqxScheduler("toolBarRangeFormat",t)},t.prototype.toolBarRangeFormatAbbr=function(t){if(t===undefined)return this.host.jqxScheduler("toolBarRangeFormatAbbr");this.host.jqxScheduler("toolBarRangeFormatAbbr",t)},t.prototype.toolbarHeight=function(t){if(t===undefined)return this.host.jqxScheduler("toolbarHeight");this.host.jqxScheduler("toolbarHeight",t)},t.prototype.views=function(t){if(t===undefined)return this.host.jqxScheduler("views");this.host.jqxScheduler("views",t)},t.prototype.view=function(t){if(t===undefined)return this.host.jqxScheduler("view");this.host.jqxScheduler("view",t)},t.prototype.width=function(t){if(t===undefined)return this.host.jqxScheduler("width");this.host.jqxScheduler("width",t)},t.prototype.addAppointment=function(t){this.host.jqxScheduler("addAppointment",t)},t.prototype.beginAppointmentsUpdate=function(){this.host.jqxScheduler("beginAppointmentsUpdate")},t.prototype.clearAppointmentsSelection=function(){this.host.jqxScheduler("clearAppointmentsSelection")},t.prototype.clearSelection=function(){this.host.jqxScheduler("clearSelection")},t.prototype.closeMenu=function(){this.host.jqxScheduler("closeMenu")},t.prototype.closeDialog=function(){this.host.jqxScheduler("closeDialog")},t.prototype.deleteAppointment=function(t){this.host.jqxScheduler("deleteAppointment",t)},t.prototype.destroy=function(){this.host.jqxScheduler("destroy")},t.prototype.endAppointmentsUpdate=function(){this.host.jqxScheduler("endAppointmentsUpdate")},t.prototype.ensureAppointmentVisible=function(t){this.host.jqxScheduler("ensureAppointmentVisible",t)},t.prototype.ensureVisible=function(t,e){this.host.jqxScheduler("ensureVisible",t,e)},t.prototype.exportData=function(t){return this.host.jqxScheduler("exportData",t)},t.prototype.focus=function(){this.host.jqxScheduler("focus")},t.prototype.getAppointmentProperty=function(t,e){return this.host.jqxScheduler("getAppointmentProperty",t,e)},t.prototype.getSelection=function(){return this.host.jqxScheduler("getSelection")},t.prototype.getAppointments=function(){return this.host.jqxScheduler("getAppointments")},t.prototype.getDataAppointments=function(){return this.host.jqxScheduler("getDataAppointments")},t.prototype.hideAppointmentsByResource=function(t){this.host.jqxScheduler("hideAppointmentsByResource",t)},t.prototype.openMenu=function(t,e){this.host.jqxScheduler("openMenu",t,e)},t.prototype.openDialog=function(t,e){this.host.jqxScheduler("openDialog",t,e)},t.prototype.selectAppointment=function(t){this.host.jqxScheduler("selectAppointment",t)},t.prototype.setAppointmentProperty=function(t,e,o){this.host.jqxScheduler("setAppointmentProperty",t,e,o)},t.prototype.selectCell=function(t,e,o){this.host.jqxScheduler("selectCell",t,e,o)},t.prototype.showAppointmentsByResource=function(t){this.host.jqxScheduler("showAppointmentsByResource",t)},t.prototype.scrollWidth=function(){return this.host.jqxScheduler("scrollWidth")},t.prototype.scrollHeight=function(){return this.host.jqxScheduler("scrollHeight")},t.prototype.scrollLeft=function(t){this.host.jqxScheduler("scrollLeft",t)},t.prototype.scrollTop=function(t){this.host.jqxScheduler("scrollTop",t)},t.prototype.__wireEvents__=function(){var t=this;this.host.on("appointmentChange",function(e){t.onAppointmentChange.emit(e)}),this.host.on("appointmentClick",function(e){t.onAppointmentClick.emit(e)}),this.host.on("appointmentDoubleClick",function(e){t.onAppointmentDoubleClick.emit(e)}),this.host.on("appointmentDelete",function(e){t.onAppointmentDelete.emit(e)}),this.host.on("appointmentAdd",function(e){t.onAppointmentAdd.emit(e)}),this.host.on("bindingComplete",function(e){t.onBindingComplete.emit(e)}),this.host.on("cellClick",function(e){t.onCellClick.emit(e)}),this.host.on("cellDoubleClick",function(e){t.onCellDoubleClick.emit(e)}),this.host.on("contextMenuOpen",function(e){t.onContextMenuOpen.emit(e)}),this.host.on("contextMenuClose",function(e){t.onContextMenuClose.emit(e)}),this.host.on("contextMenuItemClick",function(e){t.onContextMenuItemClick.emit(e)}),this.host.on("contextMenuCreate",function(e){t.onContextMenuCreate.emit(e)}),this.host.on("dateChange",function(e){t.onDateChange.emit(e)}),this.host.on("editRecurrenceDialogOpen",function(e){t.onEditRecurrenceDialogOpen.emit(e)}),this.host.on("editRecurrenceDialogClose",function(e){t.onEditRecurrenceDialogClose.emit(e)}),this.host.on("editDialogCreate",function(e){t.onEditDialogCreate.emit(e)}),this.host.on("editDialogOpen",function(e){t.onEditDialogOpen.emit(e)}),this.host.on("editDialogClose",function(e){t.onEditDialogClose.emit(e)}),this.host.on("viewChange",function(e){t.onViewChange.emit(e)})},o([e.Input("appointmentOpacity"),n("design:type",Number)],t.prototype,"attrAppointmentOpacity",void 0),o([e.Input("appointmentsMinHeight"),n("design:type",Number)],t.prototype,"attrAppointmentsMinHeight",void 0),o([e.Input("appointmentDataFields"),n("design:type",Object)],t.prototype,"attrAppointmentDataFields",void 0),o([e.Input("appointmentTooltips"),n("design:type",Boolean)],t.prototype,"attrAppointmentTooltips",void 0),o([e.Input("columnsHeight"),n("design:type",Number)],t.prototype,"attrColumnsHeight",void 0),o([e.Input("contextMenu"),n("design:type",Boolean)],t.prototype,"attrContextMenu",void 0),o([e.Input("contextMenuOpen"),n("design:type",Function)],t.prototype,"attrContextMenuOpen",void 0),o([e.Input("contextMenuClose"),n("design:type",Function)],t.prototype,"attrContextMenuClose",void 0),o([e.Input("contextMenuItemClick"),n("design:type",Function)],t.prototype,"attrContextMenuItemClick",void 0),o([e.Input("contextMenuCreate"),n("design:type",Function)],t.prototype,"attrContextMenuCreate",void 0),o([e.Input("changedAppointments"),n("design:type",Array)],t.prototype,"attrChangedAppointments",void 0),o([e.Input("disabled"),n("design:type",Boolean)],t.prototype,"attrDisabled",void 0),o([e.Input("date"),n("design:type",Object)],t.prototype,"attrDate",void 0),o([e.Input("dayNameFormat"),n("design:type",String)],t.prototype,"attrDayNameFormat",void 0),o([e.Input("enableHover"),n("design:type",Boolean)],t.prototype,"attrEnableHover",void 0),o([e.Input("editDialog"),n("design:type",Boolean)],t.prototype,"attrEditDialog",void 0),o([e.Input("editDialogDateTimeFormatString"),n("design:type",String)],t.prototype,"attrEditDialogDateTimeFormatString",void 0),o([e.Input("editDialogDateFormatString"),n("design:type",String)],t.prototype,"attrEditDialogDateFormatString",void 0),o([e.Input("editDialogOpen"),n("design:type",Function)],t.prototype,"attrEditDialogOpen",void 0),o([e.Input("editDialogCreate"),n("design:type",Function)],t.prototype,"attrEditDialogCreate",void 0),o([e.Input("editDialogKeyDown"),n("design:type",Function)],t.prototype,"attrEditDialogKeyDown",void 0),o([e.Input("editDialogClose"),n("design:type",Function)],t.prototype,"attrEditDialogClose",void 0),o([e.Input("exportSettings"),n("design:type",Object)],t.prototype,"attrExportSettings",void 0),o([e.Input("legendPosition"),n("design:type",String)],t.prototype,"attrLegendPosition",void 0),o([e.Input("legendHeight"),n("design:type",Number)],t.prototype,"attrLegendHeight",void 0),o([e.Input("localization"),n("design:type",Object)],t.prototype,"attrLocalization",void 0),o([e.Input("min"),n("design:type",Object)],t.prototype,"attrMin",void 0),o([e.Input("max"),n("design:type",Object)],t.prototype,"attrMax",void 0),o([e.Input("ready"),n("design:type",Function)],t.prototype,"attrReady",void 0),o([e.Input("renderAppointment"),n("design:type",Function)],t.prototype,"attrRenderAppointment",void 0),o([e.Input("rendering"),n("design:type",Function)],t.prototype,"attrRendering",void 0),o([e.Input("rendered"),n("design:type",Function)],t.prototype,"attrRendered",void 0),o([e.Input("rtl"),n("design:type",Boolean)],t.prototype,"attrRtl",void 0),o([e.Input("resources"),n("design:type",Object)],t.prototype,"attrResources",void 0),o([e.Input("rowsHeight"),n("design:type",Number)],t.prototype,"attrRowsHeight",void 0),o([e.Input("showToolbar"),n("design:type",Boolean)],t.prototype,"attrShowToolbar",void 0),o([e.Input("showLegend"),n("design:type",Boolean)],t.prototype,"attrShowLegend",void 0),o([e.Input("scrollBarSize"),n("design:type",Number)],t.prototype,"attrScrollBarSize",void 0),o([e.Input("source"),n("design:type",Object)],t.prototype,"attrSource",void 0),o([e.Input("statuses"),n("design:type",Object)],t.prototype,"attrStatuses",void 0),o([e.Input("touchRowsHeight"),n("design:type",Number)],t.prototype,"attrTouchRowsHeight",void 0),o([e.Input("theme"),n("design:type",String)],t.prototype,"attrTheme",void 0),o([e.Input("touchAppointmentsMinHeight"),n("design:type",Number)],t.prototype,"attrTouchAppointmentsMinHeight",void 0),o([e.Input("touchScrollBarSize"),n("design:type",Number)],t.prototype,"attrTouchScrollBarSize",void 0),o([e.Input("timeZone"),n("design:type",String)],t.prototype,"attrTimeZone",void 0),o([e.Input("touchDayNameFormat"),n("design:type",String)],t.prototype,"attrTouchDayNameFormat",void 0),o([e.Input("toolBarRangeFormat"),n("design:type",String)],t.prototype,"attrToolBarRangeFormat",void 0),o([e.Input("toolBarRangeFormatAbbr"),n("design:type",String)],t.prototype,"attrToolBarRangeFormatAbbr",void 0),o([e.Input("toolbarHeight"),n("design:type",Number)],t.prototype,"attrToolbarHeight",void 0),o([e.Input("views"),n("design:type",Array)],t.prototype,"attrViews",void 0),o([e.Input("view"),n("design:type",String)],t.prototype,"attrView",void 0),o([e.Input("width"),n("design:type",Object)],t.prototype,"attrWidth",void 0),o([e.Input("height"),n("design:type",Object)],t.prototype,"attrHeight",void 0),o([e.Input("auto-create"),n("design:type",Boolean)],t.prototype,"autoCreate",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onAppointmentChange",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onAppointmentClick",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onAppointmentDoubleClick",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onAppointmentDelete",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onAppointmentAdd",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onBindingComplete",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onCellClick",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onCellDoubleClick",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onContextMenuOpen",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onContextMenuClose",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onContextMenuItemClick",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onContextMenuCreate",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onDateChange",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onEditRecurrenceDialogOpen",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onEditRecurrenceDialogClose",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onEditDialogCreate",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onEditDialogOpen",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onEditDialogClose",void 0),o([e.Output(),n("design:type",Object)],t.prototype,"onViewChange",void 0),t=o([e.Component({selector:"jqxScheduler",template:"<div><ng-content></ng-content></div>"}),n("design:paramtypes",[e.ElementRef])],t)}(),p=function(){function t(){}return t=o([e.NgModule({imports:[],declarations:[r],exports:[r]})],t)}();t.jqxSchedulerComponent=r,t.jqxSchedulerModule=p,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=jqwidgets-ng-jqxscheduler.umd.min.js.map