require('../../jqwidgets-scripts/jqwidgets/jqxcore');
require('../../jqwidgets-scripts/jqwidgets/jqxdata');
require('../../jqwidgets-scripts/jqwidgets/jqxtreemap');
require('../../jqwidgets-scripts/jqwidgets/jqxtooltip');
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("jqwidgets-ng/jqxtreemap",["exports","@angular/core"],t):t(((e=e||self)["jqwidgets-ng"]=e["jqwidgets-ng"]||{},e["jqwidgets-ng"].jqxtreemap={}),e.ng.core)}(this,function(e,t){"use strict";function o(e,t,o,n){var r,i=arguments.length,s=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,t,o,n);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(s=(i<3?r(s):i>3?r(t,o,s):r(t,o))||s);return i>3&&s&&Object.defineProperty(t,o,s),s}function n(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function r(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var n,r,i=o.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(n=i.next()).done;)s.push(n.value)}catch(p){r={error:p}}finally{try{n&&!n.done&&(o=i["return"])&&o.call(i)}finally{if(r)throw r.error}}return s}var i=function(){function e(e){this.autoCreate=!0,this.properties=["baseColor","colorRanges","colorRange","colorMode","displayMember","height","hoverEnabled","headerHeight","legendLabel","legendPosition","legendScaleCallback","renderCallbacks","selectionEnabled","showLegend","source","theme","valueMember","width"],this.onBindingComplete=new t.EventEmitter,this.elementRef=e}return e.prototype.ngOnInit=function(){this.autoCreate&&this.createComponent()},e.prototype.ngOnChanges=function(e){if(this.host)for(var t=0;t<this.properties.length;t++){var o="attr"+this.properties[t].substring(0,1).toUpperCase()+this.properties[t].substring(1),n=!1;if(this[o]!==undefined){if("object"==typeof this[o]){if(this[o]instanceof Array&&(n=this.arraysEqual(this[o],this.host.jqxTreeMap(this.properties[t]))),n)return!1;this.host.jqxTreeMap(this.properties[t],this[o]);continue}this[o]!==this.host.jqxTreeMap(this.properties[t])&&this.host.jqxTreeMap(this.properties[t],this[o])}}},e.prototype.arraysEqual=function(e,t){if(e&&!t||!e&&t)return!1;if(e.length!=t.length)return!1;for(var o=0;o<e.length;o++)if(e[o]!==t[o])return!1;return!0},e.prototype.manageAttributes=function(){for(var e={},t=0;t<this.properties.length;t++){var o="attr"+this.properties[t].substring(0,1).toUpperCase()+this.properties[t].substring(1);this[o]!==undefined&&(e[this.properties[t]]=this[o])}return e},e.prototype.moveClasses=function(e,t){var o,n=e.classList;n.length>0&&(o=t.classList).add.apply(o,function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e}(n)),e.className=""},e.prototype.moveStyles=function(e,t){var o=e.style.cssText;t.style.cssText=o,e.style.cssText=""},e.prototype.createComponent=function(e){this.host||(e?JQXLite.extend(e,this.manageAttributes()):e=this.manageAttributes(),this.host=JQXLite(this.elementRef.nativeElement.firstChild),this.moveClasses(this.elementRef.nativeElement,this.host[0]),this.moveStyles(this.elementRef.nativeElement,this.host[0]),this.host[0].style.marginLeft="1px",this.__wireEvents__(),this.widgetObject=jqwidgets.createInstance(this.host,"jqxTreeMap",e))},e.prototype.createWidget=function(e){this.createComponent(e)},e.prototype.__updateRect__=function(){this.host&&this.host.css({width:this.attrWidth,height:this.attrHeight})},e.prototype.setOptions=function(e){this.host.jqxTreeMap("setOptions",e)},e.prototype.baseColor=function(e){if(e===undefined)return this.host.jqxTreeMap("baseColor");this.host.jqxTreeMap("baseColor",e)},e.prototype.colorRanges=function(e){if(e===undefined)return this.host.jqxTreeMap("colorRanges");this.host.jqxTreeMap("colorRanges",e)},e.prototype.colorRange=function(e){if(e===undefined)return this.host.jqxTreeMap("colorRange");this.host.jqxTreeMap("colorRange",e)},e.prototype.colorMode=function(e){if(e===undefined)return this.host.jqxTreeMap("colorMode");this.host.jqxTreeMap("colorMode",e)},e.prototype.displayMember=function(e){if(e===undefined)return this.host.jqxTreeMap("displayMember");this.host.jqxTreeMap("displayMember",e)},e.prototype.height=function(e){if(e===undefined)return this.host.jqxTreeMap("height");this.host.jqxTreeMap("height",e)},e.prototype.hoverEnabled=function(e){if(e===undefined)return this.host.jqxTreeMap("hoverEnabled");this.host.jqxTreeMap("hoverEnabled",e)},e.prototype.headerHeight=function(e){if(e===undefined)return this.host.jqxTreeMap("headerHeight");this.host.jqxTreeMap("headerHeight",e)},e.prototype.legendLabel=function(e){if(e===undefined)return this.host.jqxTreeMap("legendLabel");this.host.jqxTreeMap("legendLabel",e)},e.prototype.legendPosition=function(e){if(e===undefined)return this.host.jqxTreeMap("legendPosition");this.host.jqxTreeMap("legendPosition",e)},e.prototype.legendScaleCallback=function(e){if(e===undefined)return this.host.jqxTreeMap("legendScaleCallback");this.host.jqxTreeMap("legendScaleCallback",e)},e.prototype.renderCallbacks=function(e){if(e===undefined)return this.host.jqxTreeMap("renderCallbacks");this.host.jqxTreeMap("renderCallbacks",e)},e.prototype.selectionEnabled=function(e){if(e===undefined)return this.host.jqxTreeMap("selectionEnabled");this.host.jqxTreeMap("selectionEnabled",e)},e.prototype.showLegend=function(e){if(e===undefined)return this.host.jqxTreeMap("showLegend");this.host.jqxTreeMap("showLegend",e)},e.prototype.source=function(e){if(e===undefined)return this.host.jqxTreeMap("source");this.host.jqxTreeMap("source",e)},e.prototype.theme=function(e){if(e===undefined)return this.host.jqxTreeMap("theme");this.host.jqxTreeMap("theme",e)},e.prototype.valueMember=function(e){if(e===undefined)return this.host.jqxTreeMap("valueMember");this.host.jqxTreeMap("valueMember",e)},e.prototype.width=function(e){if(e===undefined)return this.host.jqxTreeMap("width");this.host.jqxTreeMap("width",e)},e.prototype.destroy=function(){this.host.jqxTreeMap("destroy")},e.prototype.render=function(){this.host.jqxTreeMap("render")},e.prototype.__wireEvents__=function(){var e=this;this.host.on("bindingComplete",function(t){e.onBindingComplete.emit(t)})},o([t.Input("baseColor"),n("design:type",String)],e.prototype,"attrBaseColor",void 0),o([t.Input("colorRanges"),n("design:type",Array)],e.prototype,"attrColorRanges",void 0),o([t.Input("colorRange"),n("design:type",Number)],e.prototype,"attrColorRange",void 0),o([t.Input("colorMode"),n("design:type",String)],e.prototype,"attrColorMode",void 0),o([t.Input("displayMember"),n("design:type",String)],e.prototype,"attrDisplayMember",void 0),o([t.Input("hoverEnabled"),n("design:type",Boolean)],e.prototype,"attrHoverEnabled",void 0),o([t.Input("headerHeight"),n("design:type",Number)],e.prototype,"attrHeaderHeight",void 0),o([t.Input("legendLabel"),n("design:type",String)],e.prototype,"attrLegendLabel",void 0),o([t.Input("legendPosition"),n("design:type",Object)],e.prototype,"attrLegendPosition",void 0),o([t.Input("legendScaleCallback"),n("design:type",Function)],e.prototype,"attrLegendScaleCallback",void 0),o([t.Input("renderCallbacks"),n("design:type",Object)],e.prototype,"attrRenderCallbacks",void 0),o([t.Input("selectionEnabled"),n("design:type",Boolean)],e.prototype,"attrSelectionEnabled",void 0),o([t.Input("showLegend"),n("design:type",Boolean)],e.prototype,"attrShowLegend",void 0),o([t.Input("source"),n("design:type",Object)],e.prototype,"attrSource",void 0),o([t.Input("theme"),n("design:type",String)],e.prototype,"attrTheme",void 0),o([t.Input("valueMember"),n("design:type",String)],e.prototype,"attrValueMember",void 0),o([t.Input("width"),n("design:type",Object)],e.prototype,"attrWidth",void 0),o([t.Input("height"),n("design:type",Object)],e.prototype,"attrHeight",void 0),o([t.Input("auto-create"),n("design:type",Boolean)],e.prototype,"autoCreate",void 0),o([t.Output(),n("design:type",Object)],e.prototype,"onBindingComplete",void 0),e=o([t.Component({selector:"jqxTreeMap",template:"<div><ng-content></ng-content></div>"}),n("design:paramtypes",[t.ElementRef])],e)}(),s=function(){function e(){}return e=o([t.NgModule({imports:[],declarations:[i],exports:[i]})],e)}();e.jqxTreeMapComponent=i,e.jqxTreeMapModule=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=jqwidgets-ng-jqxtreemap.umd.min.js.map